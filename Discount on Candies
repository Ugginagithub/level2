/*Discount on Candies
Program Description :
A shop is selling candies at a discount. For every two candies sold, the shop gives a third candy for free.The customer can choose any candy to take away for free as long as the cost of the chosen candy is less than or equal to the minimum cost of the two candies bought.

For example, if there are 4 candies with costs 1, 2, 3, and 4, and the customer buys candies with costs 2 and 3, they can take the candy with cost 1 for free, but not the candy with cost 4.

Given a 0-indexed integer array cost, where cost[i] denotes the cost of the ith candy, print the minimum cost of buying all the candies. 

Input Format :
The program should accept a single input: a list of integers cost, where cost[i] represents the cost of the ith candy in the shop. The length of the cost list can be up to 1000.

Output Format :
The program should print an integer, which is the minimum cost for a customer to buy all the candies in the shop while considering the discount policy.

Input :
3

1 2 3 


Output :
5


Constraints :
1 ≤ cost[i] ≤ 1000*/




def minimumCost(cost):
    cost.sort()
    total_cost = 0
    n = len(cost)
    i = n - 1
    while i >= 0:
        if i >= 2:
            total_cost += cost[i] + cost[i - 1]
            i -= 3
        else:
            total_cost += sum(cost[:i+1])
            break
    return total_cost
n = int(input())
cost = list(map(int, input().split()))
result = minimumCost(cost)
print(result)
 
