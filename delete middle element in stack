/*Delete Middle Element Of Stack
Program Description :
 Given a stack, delete the middle element of the stack
without using any additional data structure. 

Middle element: - floor((size_of_stack+1)/2) (1-based
indexing) from bottom of the stack. 

Note: The output shown by the compiler is the stack from top
to bottom.  

Input Format :
The first line contains the length of the stack. 

 The second line contains the Stack. 

Output Format :
Print all the elements after deleting middle element.

Input :
5

1 2 3 4 5


Output :
1 2 4 5


Constraints :
1 <= n <= 10^5*/

#include<bits/stdc++.h>
using namespace std;
int main()
{
    int n;
    cin>>n;
    stack<int> s;
    int num;
    vector<int> v;
    for(int i=0;i<n;i++)
    {
        cin>>num;
        s.push(num);
    }
    for(int i=0;i<n;i++)
    {
        v.push_back(s.top());
        s.pop();
    }
    if(n%2==0)
    {
        int tar=n/2;
        for(int i=0;i<n;i++)
        {
            if(i==tar)continue;
            s.push(v[i]);
        }
    }
    else{
        int tar=ceil(n/2);
        for(int i=0;i<n;i++)
        {
            if(i==tar)continue;
            s.push(v[i]);
        }
    }
    while(!s.empty())
    {
        cout<<s.top()<<" ";
        s.pop();
    }
}
