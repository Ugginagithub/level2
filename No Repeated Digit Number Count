/*No Repeated Digit Number Count
Program Description :
You are working on a coding challenge for a programming competition. The task at hand is to create a function that calculates the total number of integers in a given range [n1, n2], where n1 and n2 are two non-negative integers, with the constraint that n1 is less than n2. The goal is to find the count of integers within this range that have no repeated digits.

You need to implement a function called count_numbers_with_no_repeated_digits(n1, n2) to solve this problem. The function should take two non-negative integers, n1, and n2, as input parameters and return an integer representing the total count of numbers in the range [n1, n2] (inclusive) that have no repeated digits.

Input Format :
A single line contains two space-separated integers n1 and n2.

Output Format :
Print the count of numbers with no repeating digits.

Input :
11 15


Output :
4


Constraints :
1<=n1<=n2<=10^6*/


#include <iostream>
#include <vector>

bool hasRepeatedDigits(int num) {
    std::vector<bool> digit_seen(10, false);

    while (num > 0) {
        int digit = num % 10;
        if (digit_seen[digit]) {
            return true;
        }
        digit_seen[digit] = true;
        num /= 10;
    }

    return false;
}

int count_numbers_with_no_repeated_digits(int n1, int n2) {
    int count = 0;

    for (int num = n1; num <= n2; ++num) {
        if (!hasRepeatedDigits(num)) {
            ++count;
        }
    }

    return count;
}

int main() {
    int n1, n2;
    std::cin >> n1 >> n2;

    int result = count_numbers_with_no_repeated_digits(n1, n2);
    std::cout << result << std::endl;

    return 0;
}
